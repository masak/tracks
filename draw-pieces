sub rot($x, $y, $angle = -44.55) {
    my \sina = sin($angle / 180 * π);
    my \cosa = cos($angle / 180 * π);
    return "{$x * cosa - $y * sina}, {$x * sina + $y * cosa}"
}

sub out-bulb($x, $y, $angle) {
    qq:to 'PATH-FRAGMENT';
        L {rot $x + 4, $y, $angle}
          {rot $x + 4, $y - 2, $angle}
        C {rot $x + 3, $y - 2.5, $angle} {rot $x + 3, $y - 5, $angle} {rot $x + 5, $y - 5, $angle}
          {rot $x + 7, $y - 5, $angle} {rot $x + 7, $y - 2.5, $angle} {rot $x + 6, $y - 2, $angle}
        L {rot $x + 6, $y, $angle}
          {rot $x + 10, $y, $angle}
    PATH-FRAGMENT
}

sub in-bulb($x, $y) {
    qq:to 'PATH-FRAGMENT';
        L {$x + 10},{$y}
          {$x + 6.5},{$y}
          {$x + 6.5},{$y - 1}
        C {$x + 7.5},{$y - 1.8} {$x + 7},{$y - 4.4} {$x + 5},{$y - 4.4}
          {$x + 3},{$y - 4.4} {$x + 2.5},{$y - 1.8} {$x + 3.5},{$y - 1}
        L {$x + 3.5},{$y}
          {$x},{$y}
    PATH-FRAGMENT
}

sub straight-middle-piece {
    qq:to 'PATH';
        M 5,1
        {out-bulb 5,1,0}
          15,100
        {in-bulb 5,100}
        Z
    PATH
}

sub straight($x, $y, $angle = 0) {
    qq:to 'PIECE';
      <g transform="translate({$x}, {$y}) rotate({$angle}) translate(-10,-97.3)">
        <rect width="3" height="99" x="0" y="1" />
        <path d="{straight-middle-piece}" />
        <rect width="3" height="99" x="17" y="1" />
      </g>
    PIECE
}

sub curved-left-piece {
    qq:to 'PATH';
        M {rot 93,0}
        A 93,93 0 0 1 93,0
        L 90,0
        A 90,90 0 0 0 {rot 90,0}
        Z
    PATH
}

sub curved-middle-piece {
    qq:to 'PATH';
        M {rot 105,0}
        A 105,105 0 0 1 105,0
        {in-bulb 95,0}
        A 95,95 0 0 0 {rot 95,0}
        {out-bulb 95,0,-44.55}
        Z
    PATH
}

sub curved-right-piece {
    qq:to 'PATH';
        M {rot 110,0}
        A 110,110 0 0 1 110,0
        L 107,0
        A 107,107 0 0 0 {rot 107,0}
        Z
    PATH
}

sub curved-left($x, $y, $angle = 0) {
    qq:to 'PIECE';
      <g transform="translate({$x}, {$y}) rotate({$angle}) translate(-100,2.7)">
        <path d="{curved-left-piece}" />
        <path d="{curved-middle-piece}" />
        <path d="{curved-right-piece}" />
      </g>
    PIECE
}

sub curved-right($x, $y, $angle = 0) {
    qq:to 'PIECE';
      <g transform="translate({$x}, {$y}) rotate({$angle}) scale(-1,1) translate(-100,2.7)">
        <path d="{curved-left-piece}" />
        <path d="{curved-middle-piece}" />
        <path d="{curved-right-piece}" />
      </g>
    PIECE
}

my $distance = 100 * sqrt(2 - sqrt(2));
my ($x, $y, $angle) = 0, 0, -22.5;

sub advance($d) {
    $x += $d * cos(($angle - 90) / 180 * π);
    $y += $d * sin(($angle - 90) / 180 * π);
}

my $body = "";

sub add-piece(&piece) {
    $body ~= piece($x, $y, $angle);
    if &piece === &curved-left {
        $x -= 2.7 * cos(($angle - 90) / 180 * π);
        $y -= 2.7 * sin(($angle - 90) / 180 * π);
        $angle -= 22.5;
        advance($distance);
        $angle -= 22.5;
        $x += 2.7 * cos(($angle - 90) / 180 * π);
        $y += 2.7 * sin(($angle - 90) / 180 * π);
    }
    elsif &piece === &curved-right {
        $x -= 2.7 * cos(($angle - 90) / 180 * π);
        $y -= 2.7 * sin(($angle - 90) / 180 * π);
        $angle += 22.5;
        advance($distance);
        $angle += 22.5;
        $x += 2.7 * cos(($angle - 90) / 180 * π);
        $y += 2.7 * sin(($angle - 90) / 180 * π);
    }
    else {
        advance(100);
    }
}

add-piece($_) for flat
    &straight,
    &curved-left xx 6,
    &straight xx 2,
    &curved-right xx 6,
    &straight,
;

print qq:to 'SVG';
    <?xml version="1.0" encoding="UTF-8" standalone="no"?>

    <svg
       xmlns="http://www.w3.org/2000/svg"
       version="1.1"
       width="600"
       height="200">

      {$body}
    </svg>
    SVG
